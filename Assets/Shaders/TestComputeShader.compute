// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// HLSL: Define Directive (Defining custom constants) https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-pre-define-1
#define MAX_X_THREADS 1
#define MAX_Y_THREADS 1
#define MAX_Z_THREADS 1
#define MAX_COUNT 1000

// HLSl: User Defined Types - https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-user-defined
//typedef vector<int, 4> myInt;

// HLSL: Struct (Needs to have the same layout as correspoding C# struct) https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-struct
struct BranchData
{
    float3 branchRotation;

    float branchScale;

    int numberOfChildBranches;
    int connectedChildBranches;
    
    int childBranchesStartIdx;
    
    int padding;
};

RWStructuredBuffer<BranchData> dataBuffer;

[numthreads(MAX_X_THREADS, MAX_Y_THREADS, MAX_Z_THREADS)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    for (int i = 0; i < MAX_COUNT; i++)
    {
        LoadData(0);

        BranchData newData = dataBuffer[i];
        
        newData.padding = i;
    
        dataBuffer[i] = newData;
    }
}
